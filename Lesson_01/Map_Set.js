// ---------- Map ----------
// Map — это коллекция ключ/значение, как и Object. Но основное отличие в том, что
// Map позволяет использовать ключи любого типа.
// Методы и свойства:
// ● new Map() — создаёт коллекцию
// ● map.set(key, value) — записывает по ключу key значение value
// ● map.get(key) — возвращает значение по ключу или undefined, если ключ keyотсутствует
// ● map.has(key) — возвращает true, если ключ key присутствует в коллекции, иначеfalse
// ● map.delete(key) — удаляет элемент (пару «ключ/значение») по ключу key
// ● map.clear() — очищает коллекцию от всех элементов
// ● map.size — возвращает текущее количество элементо

// ---------- Set ---------------
// Объект Set — это особый вид коллекции: «множество» значений (без ключей), где
// каждое значение может появляться только один раз.
// Его основные методы это:
// ● new Set(iterable) — создаёт Set, и если в качестве аргумента был предоставлен
// итерируемый объект(обычно это массив), то копирует его значения в новый Set
// ● set.add(value) — добавляет значение (если оно уже есть, то ничего не делает),возвращает тот же объект set
// ● set.delete(value) — удаляет значение, возвращает true, если value было вомножестве на момент вызова, иначе false
// ● set.has(value) — возвращает true, если значение присутствует во множестве,иначе false
// ● set.clear() — удаляет все имеющиеся значения
// ● set.size — возвращает количество элементов во множестве


// Перебор коллекции Map
// В коллекцию map перебор происходит в том же порядке, в каком добавлялись элементы
// Для перебора коллекции Map есть 4 метода:
// ● map.keys() — возвращает итерируемый объект по ключам
// ● map.values() — возвращает итерируемый объект по значениям
// ● map.entries() — возвращает итерируемый объект по парам вида [ключ,
// значение], этот вариант используется по умолчанию в for(..of..)
// ● map.forEach() — итератор, работающий так же, как и с массивом


let map = new Map();

map.set('1', 'str1'); // строка в качестве ключа
map.set(1, 'num1');   // цифра как ключ
map.set(true, 'bool1');  // булевое значение как ключ

console.log(map);
// Map(3) {'1' => 'str1', 1 => 'num1', true => 'bool1'}

// помните, обычный объект Object приводит ключи к строкам
// Map сохраняет тип ключей, так что в этом случае сохранится 2 разных значения:

console.log(map.get(1)); // num1
console.log(map.get('1')); // str1
console.log(map.size); // 3

// get set

let map2 = new Map();

map2.set('1', 'We').set(1, 'lekes').set(true, 'JS');

console.log(map2); 
// Map(3) {'1' => 'We', 1 => 'lekes', true => 'JS'}

// Перебор коллекции Map

let recipeMap = new Map([
    ['огурец', 500],
    ['помидор', 350],
    ['лук', 50]
]);

console.log(recipeMap);
//перебор по ключам (овощи)
for (let vegetable of recipeMap.keys()) {
    console.log(vegetable); // огурец помидор лук
}

// перебор по значениям
for (let vegetable of recipeMap.values()) {
    console.log(vegetable); // 500 350 50
}

// перебор по элементам в формате [ключ, значение]
for (let entry of recipeMap) {  // то же самое, что и recipeMap.entries()
    console.log(entry); // ['огурец', 500] ['помидор', 350] и тд
}

// выполняем функцияю для каждой пары (ключ, значение)
recipeMap.forEach((value, key, map) => {
    console.log(`${key}: ${value}`); // огурец: 500 и тд
});

// Работа с объектами

// Object.entries поможет создать Map:

// let map3 = new Map(Object.entries(obj));

// Object.fromEntries поможет создать объект из Map

 // let obj = Object.fromEntries(map3);



// ------- SET --------------

// let buddies = [
//     'Жучка',
//     'Тузик',
//     'Бобик',
//     'Бобик',
//     'Мурка',
//     'Манька',
//     'Пучок',
//     'Фантик',
//     'Фанни',
//     'Любимчик',
//     'Бобик'

// ];

// let uniqueBuddies = new Set(buddies);

// console.log(uniqueBuddies); // выводит 9 собачек из 11 - убрали дубликаты


// Перевести обратно в массив поможет метод Array.from:

let buddies = [
    'Жучка',
    'Тузик',
    'Бобик',
    'Бобик',
    'Мурка',
    'Манька',
    'Пучок',
    'Фантик',
    'Фанни',
    'Любимчик',
    'Бобик'

];

let uniqueBuddies = new Set(buddies);

let arr = Array.from(uniqueBuddies);
console.log(arr); // ['Жучка', 'Тузик', 'Бобик', 'Мурка', 'Манька', 'Пучок', 'Фантик', 'Фанни', 'Любимчик']
